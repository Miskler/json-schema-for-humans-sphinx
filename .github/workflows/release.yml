name: Release Pipeline

on:
  release:
    types: [published]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "release"
  cancel-in-progress: false

jobs:
  # Step 1: Run tests and linting
  test:
    uses: ./.github/workflows/reusable-test.yml
    with:
      upload-coverage: true

  # Step 2: Build and deploy documentation
  build-docs:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python Environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: '3.11'
          
      - name: Download coverage artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage-reports
          path: ./
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build Documentation
        uses: ./.github/actions/build-docs
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

  # Step 3: Deploy to GitHub Pages
  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Step 4: Publish to PyPI
  publish:
    runs-on: ubuntu-latest
    needs: test
    environment: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python Environment
      uses: ./.github/actions/setup-python-env
      with:
        python-version: '3.11'
        install-dev: 'false'
        
    - name: Install build dependencies
      run: |
        pip install build twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verify-metadata: false
